* About

[[https://github.com/jakub-stastny/blog.parser.post.json/actions/workflows/test.yml][https://github.com/jakub-stastny/blog.parser.post.json/actions/workflows/test.yml/badge.svg]]

This is THE data library of the ecosystem. It serialises and deserialises the post JSON and is being relied upon by the rest of the ecosystem: namely by the [[https://github.com/jakub-stastny/blog.engine][blog.engine]] and the [[https://github.com/jakub-stastny/blog.generator][blog.generator]].

* Resources and community

This repository is only one of many packages that I wrote for my blog. For the overall architecture and documentation please see the [[https://github.com/jakub-stastny/blog][blog meta repo]]. That's also the place to [[https://github.com/jakub-stastny/blog/issues][raise any issues]] if you encounter any and to [[https://github.com/jakub-stastny/blog/discussions][discuss the project and ask questions]].

* Understanding the code base

/Where's all the source code?/

** Literate programming

In case you're wondering where are all the Elm files, you have to tangle code blocks from [[https://orgmode.org][Org mode]] files in =src= into actual Elm files using Org mode in Emacs.

Don't worry about it though â€“ unless you want to set up the code locally, there is no need. Just read the Org mode files in the =src= directory, it contains well-documented code.

If you're curious why am I doing this, you can check my post on [[https://github.com/jakub-stastny/blog/blob/master/doc/literate-programming.org][literate programming]].

* Setup

If you want to contribute or just play around with it, check out [[https://github.com/jakub-stastny/blog/blob/master/doc/setup.org][how to set up the repository]].

* Pending matters
** TODO TypeScript type file

Elm generates JS, so we need type definitions for when this is required in TS projects.
